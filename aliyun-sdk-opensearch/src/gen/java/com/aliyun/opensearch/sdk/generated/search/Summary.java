/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.aliyun.opensearch.sdk.generated.search;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * 增加了此内容后，fieldName字段可能会被截断、飘红等。
 * 
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2018-08-17")
public class Summary implements org.apache.thrift.TBase<Summary, Summary._Fields>, java.io.Serializable, Cloneable, Comparable<Summary> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Summary");

  private static final org.apache.thrift.protocol.TField SUMMARY_FIELD_FIELD_DESC = new org.apache.thrift.protocol.TField("summary_field", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField SUMMARY_LEN_FIELD_DESC = new org.apache.thrift.protocol.TField("summary_len", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField SUMMARY_ELLIPSIS_FIELD_DESC = new org.apache.thrift.protocol.TField("summary_ellipsis", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField SUMMARY_SNIPPET_FIELD_DESC = new org.apache.thrift.protocol.TField("summary_snippet", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField SUMMARY_ELEMENT_FIELD_DESC = new org.apache.thrift.protocol.TField("summary_element", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField SUMMARY_ELEMENT_PREFIX_FIELD_DESC = new org.apache.thrift.protocol.TField("summary_element_prefix", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField SUMMARY_ELEMENT_POSTFIX_FIELD_DESC = new org.apache.thrift.protocol.TField("summary_element_postfix", org.apache.thrift.protocol.TType.STRING, (short)13);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new SummaryStandardSchemeFactory());
    schemes.put(TupleScheme.class, new SummaryTupleSchemeFactory());
  }

  private String summary_field; // required
  private String summary_len; // optional
  private String summary_ellipsis; // optional
  private String summary_snippet; // optional
  private String summary_element; // optional
  private String summary_element_prefix; // optional
  private String summary_element_postfix; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 指定的生效的字段。此字段必需为可分词的text类型的字段。
     * 
     */
    SUMMARY_FIELD((short)1, "summary_field"),
    /**
     * 指定结果集返回的词字段的字节长度，一个汉字为2个字节。
     * 
     */
    SUMMARY_LEN((short)3, "summary_len"),
    /**
     * 指定用什么符号来标注未展示完的数据，例如“...”。
     * 
     */
    SUMMARY_ELLIPSIS((short)5, "summary_ellipsis"),
    /**
     * 指定query命中几段summary内容。
     * 
     */
    SUMMARY_SNIPPET((short)7, "summary_snippet"),
    /**
     * 指定命中的query的标红标签，可以为em等。
     * 
     */
    SUMMARY_ELEMENT((short)9, "summary_element"),
    /**
     * 指定标签前缀。
     * 
     */
    SUMMARY_ELEMENT_PREFIX((short)11, "summary_element_prefix"),
    /**
     * 指定标签后缀。
     * 
     */
    SUMMARY_ELEMENT_POSTFIX((short)13, "summary_element_postfix");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // SUMMARY_FIELD
          return SUMMARY_FIELD;
        case 3: // SUMMARY_LEN
          return SUMMARY_LEN;
        case 5: // SUMMARY_ELLIPSIS
          return SUMMARY_ELLIPSIS;
        case 7: // SUMMARY_SNIPPET
          return SUMMARY_SNIPPET;
        case 9: // SUMMARY_ELEMENT
          return SUMMARY_ELEMENT;
        case 11: // SUMMARY_ELEMENT_PREFIX
          return SUMMARY_ELEMENT_PREFIX;
        case 13: // SUMMARY_ELEMENT_POSTFIX
          return SUMMARY_ELEMENT_POSTFIX;
        default:
          return null;
      }
    }

    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final _Fields optionals[] = {_Fields.SUMMARY_LEN,_Fields.SUMMARY_ELLIPSIS,_Fields.SUMMARY_SNIPPET,_Fields.SUMMARY_ELEMENT,_Fields.SUMMARY_ELEMENT_PREFIX,_Fields.SUMMARY_ELEMENT_POSTFIX};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.SUMMARY_FIELD, new org.apache.thrift.meta_data.FieldMetaData("summary_field", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SUMMARY_LEN, new org.apache.thrift.meta_data.FieldMetaData("summary_len", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SUMMARY_ELLIPSIS, new org.apache.thrift.meta_data.FieldMetaData("summary_ellipsis", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SUMMARY_SNIPPET, new org.apache.thrift.meta_data.FieldMetaData("summary_snippet", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SUMMARY_ELEMENT, new org.apache.thrift.meta_data.FieldMetaData("summary_element", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SUMMARY_ELEMENT_PREFIX, new org.apache.thrift.meta_data.FieldMetaData("summary_element_prefix", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SUMMARY_ELEMENT_POSTFIX, new org.apache.thrift.meta_data.FieldMetaData("summary_element_postfix", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Summary.class, metaDataMap);
  }

  public Summary() {
    this.summary_ellipsis = "...";

  }

  public Summary(
    String summary_field)
  {
    this();
    this.summary_field = summary_field;
  }

  public Summary(Summary other) {
    if (other.isSetSummary_field()) {
      this.summary_field = other.summary_field;
    }
    if (other.isSetSummary_len()) {
      this.summary_len = other.summary_len;
    }
    if (other.isSetSummary_ellipsis()) {
      this.summary_ellipsis = other.summary_ellipsis;
    }
    if (other.isSetSummary_snippet()) {
      this.summary_snippet = other.summary_snippet;
    }
    if (other.isSetSummary_element()) {
      this.summary_element = other.summary_element;
    }
    if (other.isSetSummary_element_prefix()) {
      this.summary_element_prefix = other.summary_element_prefix;
    }
    if (other.isSetSummary_element_postfix()) {
      this.summary_element_postfix = other.summary_element_postfix;
    }
  }

  public Summary deepCopy() {
    return new Summary(this);
  }

  @Override
  public void clear() {
    this.summary_field = null;
    this.summary_len = null;
    this.summary_ellipsis = "...";

    this.summary_snippet = null;
    this.summary_element = null;
    this.summary_element_prefix = null;
    this.summary_element_postfix = null;
  }

  public String getSummary_field() {
    return this.summary_field;
  }

  public Summary setSummary_field(String summary_field) {
    this.summary_field = summary_field;
    return this;
  }

  public void unsetSummary_field() {
    this.summary_field = null;
  }

  public boolean isSetSummary_field() {
    return this.summary_field != null;
  }

  public void setSummary_fieldIsSet(boolean value) {
    if (!value) {
      this.summary_field = null;
    }
  }

  public String getSummary_len() {
    return this.summary_len;
  }

  public Summary setSummary_len(String summary_len) {
    this.summary_len = summary_len;
    return this;
  }

  public void unsetSummary_len() {
    this.summary_len = null;
  }

  public boolean isSetSummary_len() {
    return this.summary_len != null;
  }

  public void setSummary_lenIsSet(boolean value) {
    if (!value) {
      this.summary_len = null;
    }
  }

  public String getSummary_ellipsis() {
    return this.summary_ellipsis;
  }

  public Summary setSummary_ellipsis(String summary_ellipsis) {
    this.summary_ellipsis = summary_ellipsis;
    return this;
  }

  public void unsetSummary_ellipsis() {
    this.summary_ellipsis = null;
  }

  public boolean isSetSummary_ellipsis() {
    return this.summary_ellipsis != null;
  }

  public void setSummary_ellipsisIsSet(boolean value) {
    if (!value) {
      this.summary_ellipsis = null;
    }
  }

  public String getSummary_snippet() {
    return this.summary_snippet;
  }

  public Summary setSummary_snippet(String summary_snippet) {
    this.summary_snippet = summary_snippet;
    return this;
  }

  public void unsetSummary_snippet() {
    this.summary_snippet = null;
  }

  public boolean isSetSummary_snippet() {
    return this.summary_snippet != null;
  }

  public void setSummary_snippetIsSet(boolean value) {
    if (!value) {
      this.summary_snippet = null;
    }
  }

  public String getSummary_element() {
    return this.summary_element;
  }

  public Summary setSummary_element(String summary_element) {
    this.summary_element = summary_element;
    return this;
  }

  public void unsetSummary_element() {
    this.summary_element = null;
  }

  public boolean isSetSummary_element() {
    return this.summary_element != null;
  }

  public void setSummary_elementIsSet(boolean value) {
    if (!value) {
      this.summary_element = null;
    }
  }

  public String getSummary_element_prefix() {
    return this.summary_element_prefix;
  }

  public Summary setSummary_element_prefix(String summary_element_prefix) {
    this.summary_element_prefix = summary_element_prefix;
    return this;
  }

  public void unsetSummary_element_prefix() {
    this.summary_element_prefix = null;
  }

  public boolean isSetSummary_element_prefix() {
    return this.summary_element_prefix != null;
  }

  public void setSummary_element_prefixIsSet(boolean value) {
    if (!value) {
      this.summary_element_prefix = null;
    }
  }

  public String getSummary_element_postfix() {
    return this.summary_element_postfix;
  }

  public Summary setSummary_element_postfix(String summary_element_postfix) {
    this.summary_element_postfix = summary_element_postfix;
    return this;
  }

  public void unsetSummary_element_postfix() {
    this.summary_element_postfix = null;
  }

  public boolean isSetSummary_element_postfix() {
    return this.summary_element_postfix != null;
  }

  public void setSummary_element_postfixIsSet(boolean value) {
    if (!value) {
      this.summary_element_postfix = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case SUMMARY_FIELD:
      if (value == null) {
        unsetSummary_field();
      } else {
        setSummary_field((String)value);
      }
      break;

    case SUMMARY_LEN:
      if (value == null) {
        unsetSummary_len();
      } else {
        setSummary_len((String)value);
      }
      break;

    case SUMMARY_ELLIPSIS:
      if (value == null) {
        unsetSummary_ellipsis();
      } else {
        setSummary_ellipsis((String)value);
      }
      break;

    case SUMMARY_SNIPPET:
      if (value == null) {
        unsetSummary_snippet();
      } else {
        setSummary_snippet((String)value);
      }
      break;

    case SUMMARY_ELEMENT:
      if (value == null) {
        unsetSummary_element();
      } else {
        setSummary_element((String)value);
      }
      break;

    case SUMMARY_ELEMENT_PREFIX:
      if (value == null) {
        unsetSummary_element_prefix();
      } else {
        setSummary_element_prefix((String)value);
      }
      break;

    case SUMMARY_ELEMENT_POSTFIX:
      if (value == null) {
        unsetSummary_element_postfix();
      } else {
        setSummary_element_postfix((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case SUMMARY_FIELD:
      return getSummary_field();

    case SUMMARY_LEN:
      return getSummary_len();

    case SUMMARY_ELLIPSIS:
      return getSummary_ellipsis();

    case SUMMARY_SNIPPET:
      return getSummary_snippet();

    case SUMMARY_ELEMENT:
      return getSummary_element();

    case SUMMARY_ELEMENT_PREFIX:
      return getSummary_element_prefix();

    case SUMMARY_ELEMENT_POSTFIX:
      return getSummary_element_postfix();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case SUMMARY_FIELD:
      return isSetSummary_field();
    case SUMMARY_LEN:
      return isSetSummary_len();
    case SUMMARY_ELLIPSIS:
      return isSetSummary_ellipsis();
    case SUMMARY_SNIPPET:
      return isSetSummary_snippet();
    case SUMMARY_ELEMENT:
      return isSetSummary_element();
    case SUMMARY_ELEMENT_PREFIX:
      return isSetSummary_element_prefix();
    case SUMMARY_ELEMENT_POSTFIX:
      return isSetSummary_element_postfix();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof Summary)
      return this.equals((Summary)that);
    return false;
  }

  public boolean equals(Summary that) {
    if (that == null)
      return false;

    boolean this_present_summary_field = true && this.isSetSummary_field();
    boolean that_present_summary_field = true && that.isSetSummary_field();
    if (this_present_summary_field || that_present_summary_field) {
      if (!(this_present_summary_field && that_present_summary_field))
        return false;
      if (!this.summary_field.equals(that.summary_field))
        return false;
    }

    boolean this_present_summary_len = true && this.isSetSummary_len();
    boolean that_present_summary_len = true && that.isSetSummary_len();
    if (this_present_summary_len || that_present_summary_len) {
      if (!(this_present_summary_len && that_present_summary_len))
        return false;
      if (!this.summary_len.equals(that.summary_len))
        return false;
    }

    boolean this_present_summary_ellipsis = true && this.isSetSummary_ellipsis();
    boolean that_present_summary_ellipsis = true && that.isSetSummary_ellipsis();
    if (this_present_summary_ellipsis || that_present_summary_ellipsis) {
      if (!(this_present_summary_ellipsis && that_present_summary_ellipsis))
        return false;
      if (!this.summary_ellipsis.equals(that.summary_ellipsis))
        return false;
    }

    boolean this_present_summary_snippet = true && this.isSetSummary_snippet();
    boolean that_present_summary_snippet = true && that.isSetSummary_snippet();
    if (this_present_summary_snippet || that_present_summary_snippet) {
      if (!(this_present_summary_snippet && that_present_summary_snippet))
        return false;
      if (!this.summary_snippet.equals(that.summary_snippet))
        return false;
    }

    boolean this_present_summary_element = true && this.isSetSummary_element();
    boolean that_present_summary_element = true && that.isSetSummary_element();
    if (this_present_summary_element || that_present_summary_element) {
      if (!(this_present_summary_element && that_present_summary_element))
        return false;
      if (!this.summary_element.equals(that.summary_element))
        return false;
    }

    boolean this_present_summary_element_prefix = true && this.isSetSummary_element_prefix();
    boolean that_present_summary_element_prefix = true && that.isSetSummary_element_prefix();
    if (this_present_summary_element_prefix || that_present_summary_element_prefix) {
      if (!(this_present_summary_element_prefix && that_present_summary_element_prefix))
        return false;
      if (!this.summary_element_prefix.equals(that.summary_element_prefix))
        return false;
    }

    boolean this_present_summary_element_postfix = true && this.isSetSummary_element_postfix();
    boolean that_present_summary_element_postfix = true && that.isSetSummary_element_postfix();
    if (this_present_summary_element_postfix || that_present_summary_element_postfix) {
      if (!(this_present_summary_element_postfix && that_present_summary_element_postfix))
        return false;
      if (!this.summary_element_postfix.equals(that.summary_element_postfix))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_summary_field = true && (isSetSummary_field());
    list.add(present_summary_field);
    if (present_summary_field)
      list.add(summary_field);

    boolean present_summary_len = true && (isSetSummary_len());
    list.add(present_summary_len);
    if (present_summary_len)
      list.add(summary_len);

    boolean present_summary_ellipsis = true && (isSetSummary_ellipsis());
    list.add(present_summary_ellipsis);
    if (present_summary_ellipsis)
      list.add(summary_ellipsis);

    boolean present_summary_snippet = true && (isSetSummary_snippet());
    list.add(present_summary_snippet);
    if (present_summary_snippet)
      list.add(summary_snippet);

    boolean present_summary_element = true && (isSetSummary_element());
    list.add(present_summary_element);
    if (present_summary_element)
      list.add(summary_element);

    boolean present_summary_element_prefix = true && (isSetSummary_element_prefix());
    list.add(present_summary_element_prefix);
    if (present_summary_element_prefix)
      list.add(summary_element_prefix);

    boolean present_summary_element_postfix = true && (isSetSummary_element_postfix());
    list.add(present_summary_element_postfix);
    if (present_summary_element_postfix)
      list.add(summary_element_postfix);

    return list.hashCode();
  }

  @Override
  public int compareTo(Summary other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetSummary_field()).compareTo(other.isSetSummary_field());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSummary_field()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.summary_field, other.summary_field);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSummary_len()).compareTo(other.isSetSummary_len());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSummary_len()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.summary_len, other.summary_len);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSummary_ellipsis()).compareTo(other.isSetSummary_ellipsis());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSummary_ellipsis()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.summary_ellipsis, other.summary_ellipsis);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSummary_snippet()).compareTo(other.isSetSummary_snippet());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSummary_snippet()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.summary_snippet, other.summary_snippet);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSummary_element()).compareTo(other.isSetSummary_element());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSummary_element()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.summary_element, other.summary_element);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSummary_element_prefix()).compareTo(other.isSetSummary_element_prefix());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSummary_element_prefix()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.summary_element_prefix, other.summary_element_prefix);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSummary_element_postfix()).compareTo(other.isSetSummary_element_postfix());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSummary_element_postfix()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.summary_element_postfix, other.summary_element_postfix);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("Summary(");
    boolean first = true;

    sb.append("summary_field:");
    if (this.summary_field == null) {
      sb.append("null");
    } else {
      sb.append(this.summary_field);
    }
    first = false;
    if (isSetSummary_len()) {
      if (!first) sb.append(", ");
      sb.append("summary_len:");
      if (this.summary_len == null) {
        sb.append("null");
      } else {
        sb.append(this.summary_len);
      }
      first = false;
    }
    if (isSetSummary_ellipsis()) {
      if (!first) sb.append(", ");
      sb.append("summary_ellipsis:");
      if (this.summary_ellipsis == null) {
        sb.append("null");
      } else {
        sb.append(this.summary_ellipsis);
      }
      first = false;
    }
    if (isSetSummary_snippet()) {
      if (!first) sb.append(", ");
      sb.append("summary_snippet:");
      if (this.summary_snippet == null) {
        sb.append("null");
      } else {
        sb.append(this.summary_snippet);
      }
      first = false;
    }
    if (isSetSummary_element()) {
      if (!first) sb.append(", ");
      sb.append("summary_element:");
      if (this.summary_element == null) {
        sb.append("null");
      } else {
        sb.append(this.summary_element);
      }
      first = false;
    }
    if (isSetSummary_element_prefix()) {
      if (!first) sb.append(", ");
      sb.append("summary_element_prefix:");
      if (this.summary_element_prefix == null) {
        sb.append("null");
      } else {
        sb.append(this.summary_element_prefix);
      }
      first = false;
    }
    if (isSetSummary_element_postfix()) {
      if (!first) sb.append(", ");
      sb.append("summary_element_postfix:");
      if (this.summary_element_postfix == null) {
        sb.append("null");
      } else {
        sb.append(this.summary_element_postfix);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (summary_field == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'summary_field' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SummaryStandardSchemeFactory implements SchemeFactory {
    public SummaryStandardScheme getScheme() {
      return new SummaryStandardScheme();
    }
  }

  private static class SummaryStandardScheme extends StandardScheme<Summary> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Summary struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // SUMMARY_FIELD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.summary_field = iprot.readString();
              struct.setSummary_fieldIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // SUMMARY_LEN
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.summary_len = iprot.readString();
              struct.setSummary_lenIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // SUMMARY_ELLIPSIS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.summary_ellipsis = iprot.readString();
              struct.setSummary_ellipsisIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // SUMMARY_SNIPPET
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.summary_snippet = iprot.readString();
              struct.setSummary_snippetIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // SUMMARY_ELEMENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.summary_element = iprot.readString();
              struct.setSummary_elementIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // SUMMARY_ELEMENT_PREFIX
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.summary_element_prefix = iprot.readString();
              struct.setSummary_element_prefixIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // SUMMARY_ELEMENT_POSTFIX
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.summary_element_postfix = iprot.readString();
              struct.setSummary_element_postfixIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Summary struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.summary_field != null) {
        oprot.writeFieldBegin(SUMMARY_FIELD_FIELD_DESC);
        oprot.writeString(struct.summary_field);
        oprot.writeFieldEnd();
      }
      if (struct.summary_len != null) {
        if (struct.isSetSummary_len()) {
          oprot.writeFieldBegin(SUMMARY_LEN_FIELD_DESC);
          oprot.writeString(struct.summary_len);
          oprot.writeFieldEnd();
        }
      }
      if (struct.summary_ellipsis != null) {
        if (struct.isSetSummary_ellipsis()) {
          oprot.writeFieldBegin(SUMMARY_ELLIPSIS_FIELD_DESC);
          oprot.writeString(struct.summary_ellipsis);
          oprot.writeFieldEnd();
        }
      }
      if (struct.summary_snippet != null) {
        if (struct.isSetSummary_snippet()) {
          oprot.writeFieldBegin(SUMMARY_SNIPPET_FIELD_DESC);
          oprot.writeString(struct.summary_snippet);
          oprot.writeFieldEnd();
        }
      }
      if (struct.summary_element != null) {
        if (struct.isSetSummary_element()) {
          oprot.writeFieldBegin(SUMMARY_ELEMENT_FIELD_DESC);
          oprot.writeString(struct.summary_element);
          oprot.writeFieldEnd();
        }
      }
      if (struct.summary_element_prefix != null) {
        if (struct.isSetSummary_element_prefix()) {
          oprot.writeFieldBegin(SUMMARY_ELEMENT_PREFIX_FIELD_DESC);
          oprot.writeString(struct.summary_element_prefix);
          oprot.writeFieldEnd();
        }
      }
      if (struct.summary_element_postfix != null) {
        if (struct.isSetSummary_element_postfix()) {
          oprot.writeFieldBegin(SUMMARY_ELEMENT_POSTFIX_FIELD_DESC);
          oprot.writeString(struct.summary_element_postfix);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SummaryTupleSchemeFactory implements SchemeFactory {
    public SummaryTupleScheme getScheme() {
      return new SummaryTupleScheme();
    }
  }

  private static class SummaryTupleScheme extends TupleScheme<Summary> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Summary struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      oprot.writeString(struct.summary_field);
      BitSet optionals = new BitSet();
      if (struct.isSetSummary_len()) {
        optionals.set(0);
      }
      if (struct.isSetSummary_ellipsis()) {
        optionals.set(1);
      }
      if (struct.isSetSummary_snippet()) {
        optionals.set(2);
      }
      if (struct.isSetSummary_element()) {
        optionals.set(3);
      }
      if (struct.isSetSummary_element_prefix()) {
        optionals.set(4);
      }
      if (struct.isSetSummary_element_postfix()) {
        optionals.set(5);
      }
      oprot.writeBitSet(optionals, 6);
      if (struct.isSetSummary_len()) {
        oprot.writeString(struct.summary_len);
      }
      if (struct.isSetSummary_ellipsis()) {
        oprot.writeString(struct.summary_ellipsis);
      }
      if (struct.isSetSummary_snippet()) {
        oprot.writeString(struct.summary_snippet);
      }
      if (struct.isSetSummary_element()) {
        oprot.writeString(struct.summary_element);
      }
      if (struct.isSetSummary_element_prefix()) {
        oprot.writeString(struct.summary_element_prefix);
      }
      if (struct.isSetSummary_element_postfix()) {
        oprot.writeString(struct.summary_element_postfix);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Summary struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.summary_field = iprot.readString();
      struct.setSummary_fieldIsSet(true);
      BitSet incoming = iprot.readBitSet(6);
      if (incoming.get(0)) {
        struct.summary_len = iprot.readString();
        struct.setSummary_lenIsSet(true);
      }
      if (incoming.get(1)) {
        struct.summary_ellipsis = iprot.readString();
        struct.setSummary_ellipsisIsSet(true);
      }
      if (incoming.get(2)) {
        struct.summary_snippet = iprot.readString();
        struct.setSummary_snippetIsSet(true);
      }
      if (incoming.get(3)) {
        struct.summary_element = iprot.readString();
        struct.setSummary_elementIsSet(true);
      }
      if (incoming.get(4)) {
        struct.summary_element_prefix = iprot.readString();
        struct.setSummary_element_prefixIsSet(true);
      }
      if (incoming.get(5)) {
        struct.summary_element_postfix = iprot.readString();
        struct.setSummary_element_postfixIsSet(true);
      }
    }
  }

}

